{
  "_args": [
    [
      {
        "raw": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
        "spec": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
          "sshUrl": "git+ssh://git@github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
          "httpsUrl": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
          "gitUrl": "git://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
          "shortcut": "github:cordova-plugin-camera-preview/cordova-plugin-camera-preview",
          "directUrl": "https://raw.githubusercontent.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview/master/package.json"
        }
      },
      "C:\\cordovaProject\\newSt"
    ]
  ],
  "_from": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
  "_id": "cordova-plugin-camera-preview@0.9.0",
  "_inCache": true,
  "_location": "/cordova-plugin-camera-preview",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
    "spec": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
      "sshUrl": "git+ssh://git@github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
      "httpsUrl": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
      "gitUrl": "git://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
      "shortcut": "github:cordova-plugin-camera-preview/cordova-plugin-camera-preview",
      "directUrl": "https://raw.githubusercontent.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git#c2b36d57ed64a67f6cbfef8f1f30ce7e49b3c875",
  "_shasum": "d76aed7776c4b94e8a71b7c61d1e6e90c4851ff0",
  "_shrinkwrap": null,
  "_spec": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git",
  "_where": "C:\\cordovaProject\\newSt",
  "author": {
    "name": "Weston Ganger",
    "email": "westonganger@gmail.com",
    "url": "solidfoundationwebdev.com"
  },
  "bugs": {
    "url": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview/issues"
  },
  "dependencies": {
    "cordova": "*"
  },
  "description": "Cordova plugin that allows camera interaction from HTML code for showing camera preview below or on top of the HTML.",
  "devDependencies": {},
  "gitHead": "c2b36d57ed64a67f6cbfef8f1f30ce7e49b3c875",
  "homepage": "https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview",
  "keywords": [
    "cordova",
    "phonegap",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-ios",
    "android",
    "ios",
    "ionic",
    "camera",
    "cam",
    "camera-preview",
    "preview"
  ],
  "license": "Apache 2.0",
  "name": "cordova-plugin-camera-preview",
  "optionalDependencies": {},
  "readme": "Cordova Plugin Camera Preview\r\n====================\r\n\r\nCordova plugin that allows camera interaction from Javascript and HTML\r\n\r\n**This plugin is under constant development. It is recommended to use master to always have the latest fixes and features.**\r\n\r\n**PR's are greatly appreciated**\r\n\r\n# Features\r\n\r\n<ul>\r\n  <li>Start a camera preview from HTML code.</li>\r\n  <li>Maintain HTML interactivity.</li>\r\n  <li>Drag the preview box.</li>\r\n  <li>Set camera color effect.</li>\r\n  <li>Send the preview box to back of the HTML content.</li>\r\n  <li>Set a custom position for the camera preview box.</li>\r\n  <li>Set a custom size for the preview box.</li>\r\n  <li>Set a custom alpha for the preview box.</li>\r\n  <li>Set the focus mode, zoom, color effects, exposure mode, white balance mode and exposure compensation</li>\r\n  <li>Tap to focus</li>\r\n</ul>\r\n\r\n# Installation\r\n\r\nUse any one of the installation methods listed below depending on which framework you use.\r\n\r\nTo install the master version with latest fixes and features\r\n\r\n```\r\ncordova plugin add https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git\r\n\r\nionic plugin add https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git\r\n\r\nmeteor add cordova:cordova-plugin-camera-preview@https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git#[latest_commit_id]\r\n\r\n<plugin spec=\"https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git\" source=\"git\" />\r\n```\r\n\r\nor if you want to use the last released version on npm\r\n\r\n```\r\ncordova plugin add cordova-plugin-camera-preview\r\n\r\nionic plugin add cordova-plugin-camera-preview\r\n\r\nmeteor add cordova:cordova-plugin-camera-preview@X.X.X\r\n\r\n<gap:plugin name=\"cordova-plugin-camera-preview\" />\r\n```\r\n\r\n#### iOS Quirks\r\nIf you are developing for iOS 10+ you must also add the following to your config.xml\r\n\r\n```xml\r\n<config-file platform=\"ios\" target=\"*-Info.plist\" parent=\"NSCameraUsageDescription\" overwrite=\"true\">\r\n  <string>Allow the app to use your camera</string>\r\n</config-file>\r\n\r\n<!-- or for Phonegap -->\r\n\r\n<gap:config-file platform=\"ios\" target=\"*-Info.plist\" parent=\"NSCameraUsageDescription\" overwrite=\"true\">\r\n  <string>Allow the app to use your camera</string>\r\n</gap:config-file>\r\n```\r\n\r\n### Android Quirks (older devices)\r\nWhen using the plugin for older devices, the camera preview will take the focus inside the app once initialized.\r\nIn order to prevent the app from closing when a user presses the back button, the event for the camera view is disabled.\r\nIf you still want the user to navigate, you can add a listener for the back event for the preview \r\n(see <code>[onBackButton](#onBackButton)</code>) \r\n\r\n\r\n\r\n# Methods\r\n\r\n### startCamera(options, [successCallback, errorCallback])\r\n\r\nStarts the camera preview instance.\r\n<br>\r\n\r\n<strong>Options:</strong>\r\nAll options stated are optional and will default to values here\r\n\r\n* `x` - Defaults to 0\r\n* `y` - Defaults to 0\r\n* `width` - Defaults to window.screen.width\r\n* `height` - Defaults to window.screen.height\r\n* `camera` - See <code>[CAMERA_DIRECTION](#camera_Settings.CameraDirection)</code> - Defaults to front camera\r\n* `toBack` - Defaults to false - Set to true if you want your html in front of your preview\r\n* `tapPhoto` - Defaults to true - Does not work if toBack is set to false in which case you use the takePicture method\r\n* `tapFocus` - Defaults to false - Allows the user to tap to focus, when the view is in the foreground\r\n* `previewDrag` - Defaults to false - Does not work if toBack is set to false\r\n\r\n```javascript\r\nlet options = {\r\n  x: 0,\r\n  y: 0,\r\n  width: window.screen.width,\r\n  height: window.screen.height,\r\n  camera: CameraPreview.CAMERA_DIRECTION.BACK,\r\n  toBack: false,\r\n  tapPhoto: true,\r\n  tapFocus: false,\r\n  previewDrag: false\r\n};\r\n\r\nCameraPreview.startCamera(options);\r\n```\r\n\r\nWhen setting the toBack to true, remember to add the style below on your app's HTML or body element:\r\n\r\n```css\r\nhtml, body, .ion-app, .ion-content {\r\n  background-color: transparent;\r\n}\r\n```\r\n\r\nWhen both tapFocus and tapPhoto are true, the camera will focus, and take a picture as soon as the camera is done focusing.\r\n\r\n### stopCamera([successCallback, errorCallback])\r\n\r\n<info>Stops the camera preview instance.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.stopCamera();\r\n```\r\n\r\n### switchCamera([successCallback, errorCallback])\r\n\r\n<info>Switch between the rear camera and front camera, if available.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.switchCamera();\r\n```\r\n\r\n### show([successCallback, errorCallback])\r\n\r\n<info>Show the camera preview box.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.show();\r\n```\r\n\r\n### hide([successCallback, errorCallback])\r\n\r\n<info>Hide the camera preview box.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.hide();\r\n```\r\n\r\n### takePicture(options, successCallback, [errorCallback])\r\n\r\n<info>Take the picture. If width and height are not specified or are 0 it will use the defaults. If width and height are specified, it will choose a supported photo size that is closest to width and height specified and has closest aspect ratio to the preview. The argument `quality` defaults to `85` and specifies the quality/compression value: `0=max compression`, `100=max quality`.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.takePicture({width:640, height:640, quality: 85}, function(base64PictureData){\r\n  /*\r\n    base64PictureData is base64 encoded jpeg image. Use this data to store to a file or upload.\r\n    Its up to the you to figure out the best way to save it to disk or whatever for your application.\r\n  */\r\n\r\n  // One simple example is if you are going to use it inside an HTML img src attribute then you would do the following:\r\n  imageSrcData = 'data:image/jpeg;base64,' +base64PictureData;\r\n  $('img#my-img').attr('src', imageSrcData);\r\n});\r\n\r\n// OR if you want to use the default options.\r\n\r\nCameraPreview.takePicture(function(base64PictureData){\r\n  /* code here */\r\n});\r\n```\r\n### getSupportedFocusModes(cb, [errorCallback])\r\n\r\n<info>Get focus modes supported by the camera device currently started. Returns an array containing supported focus modes. See <code>[FOCUS_MODE](#camera_Settings.FocusMode)</code> for possible values that can be returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getSupportedFocusModes(function(focusModes){\r\n  focusModes.forEach(function(focusMode) {\r\n    console.log(focusMode + ', ');\r\n  });\r\n});\r\n```\r\n\r\n### setFocusMode(focusMode, [successCallback, errorCallback])\r\n\r\n<info>Set the focus mode for the camera device currently started.</info><br/>\r\n* `focusMode` - <code>[FOCUS_MODE](#camera_Settings.FocusMode)</code>\r\n\r\n```javascript\r\nCameraPreview.setFocusMode(CameraPreview.FOCUS_MODE.CONTINUOUS_PICTURE);\r\n```\r\n\r\n### getFocusMode(cb, [errorCallback])\r\n\r\n<info>Get the focus mode for the camera device currently started. Returns a string representing the current focus mode.</info>See <code>[FOCUS_MODE](#camera_Settings.FocusMode)</code> for possible values that can be returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getFocusMode(function(currentFocusMode){\r\n  console.log(currentFocusMode);\r\n});\r\n```\r\n\r\n### getSupportedFlashModes(cb, [errorCallback])\r\n\r\n<info>Get the flash modes supported by the camera device currently started. Returns an array containing supported flash modes. See <code>[FLASH_MODE](#camera_Settings.FlashMode)</code> for possible values that can be returned</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getSupportedFlashModes(function(flashModes){\r\n  flashModes.forEach(function(flashMode) {\r\n    console.log(flashMode + ', ');\r\n  });\r\n});\r\n```\r\n\r\n### setFlashMode(flashMode, [successCallback, errorCallback])\r\n\r\n<info>Set the flash mode. See <code>[FLASH_MODE](#camera_Settings.FlashMode)</code> for details about the possible values for flashMode.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setFlashMode(CameraPreview.FLASH_MODE.ON);\r\n```\r\n\r\n### getFlashMode(cb, [errorCallback])\r\n\r\n<info>Get the flash mode for the camera device currently started. Returns a string representing the current flash mode.</info>See <code>[FLASH_MODE](#camera_Settings.FlashMode)</code> for possible values that can be returned</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getFlashMode(function(currentFlashMode){\r\n  console.log(currentFlashMode);\r\n});\r\n```\r\n\r\n### getSupportedColorEffects(cb, [errorCallback])\r\n\r\n*Currently this feature is for Android only. A PR for iOS support would be happily accepted*\r\n\r\n<info>Get color modes supported by the camera device currently started. Returns an array containing supported color effects (strings). See <code>[COLOR_EFFECT](#camera_Settings.ColorEffect)</code> for possible values that can be returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getSupportedColorEffects(function(colorEffects){\r\n  colorEffects.forEach(function(color) {\r\n    console.log(color + ', ');\r\n  });\r\n});\r\n```\r\n\r\n\r\n### setColorEffect(colorEffect, [successCallback, errorCallback])\r\n\r\n<info>Set the color effect. See <code>[COLOR_EFFECT](#camera_Settings.ColorEffect)</code> for details about the possible values for colorEffect.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setColorEffect(CameraPreview.COLOR_EFFECT.NEGATIVE);\r\n```\r\n\r\n### setZoom(zoomMultiplier, [successCallback, errorCallback])\r\n\r\n<info>Set the zoom level for the camera device currently started. zoomMultipler option accepts an integer. Zoom level is initially at 1</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setZoom(2);\r\n```\r\n\r\n### getZoom(cb, [errorCallback])\r\n\r\n<info>Get the current zoom level for the camera device currently started. Returns an integer representing the current zoom level.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getZoom(function(currentZoom){\r\n  console.log(currentZoom);\r\n});\r\n```\r\n\r\n### getMaxZoom(cb, [errorCallback])\r\n\r\n<info>Get the maximum zoom level for the camera device currently started. Returns an integer representing the manimum zoom level.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getMaxZoom(function(maxZoom){\r\n  console.log(maxZoom);\r\n});\r\n```\r\n\r\n### getSupportedWhiteBalanceModes(cb, [errorCallback])\r\n\r\n<info>Returns an array with supported white balance modes for the camera device currently started. See <code>[WHITE_BALANCE_MODE](#camera_Settings.WhiteBalanceMode)</code> for details about the possible values returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getSupportedWhiteBalanceModes(function(whiteBalanceModes){\r\n  console.log(whiteBalanceModes);\r\n});\r\n```\r\n\r\n### getWhiteBalanceMode(cb, [errorCallback])\r\n\r\n<info>Get the curent white balance mode of the camera device currently started. See <code>[WHITE_BALANCE_MODE](#camera_Settings.WhiteBalanceMode)</code> for details about the possible values returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getWhiteBalanceMode(function(whiteBalanceMode){\r\n  console.log(whiteBalanceMode);\r\n});\r\n```\r\n### setWhiteBalanceMode(whiteBalanceMode, [successCallback, errorCallback])\r\n\r\n<info>Set the white balance mode for the camera device currently started. See <code>[WHITE_BALANCE_MODE](#camera_Settings.WhiteBalanceMode)</code> for details about the possible values for whiteBalanceMode.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setWhiteBalanceMode(CameraPreview.WHITE_BALANCE_MODE.CLOUDY_DAYLIGHT);\r\n```\r\n\r\n### getExposureModes(cb, [errorCallback])\r\n\r\n<info>Returns an array with supported exposure modes for the camera device currently started. See <code>[EXPOSURE_MODE](#camera_Settings.ExposureMode)</code> for details about the possible values returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getExposureModes(function(exposureModes){\r\n  console.log(exposureModes);\r\n});\r\n```\r\n\r\n### getExposureMode(cb, [errorCallback])\r\n\r\n<info>Get the curent exposure mode of the camera device currently started. See <code>[EXPOSURE_MODE](#camera_Settings.ExposureMode)</code> for details about the possible values returned.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getExposureMode(function(exposureMode){\r\n  console.log(exposureMode);\r\n});\r\n```\r\n### setExposureMode(exposureMode, [successCallback, errorCallback])\r\n\r\n<info>Set the exposure mode for the camera device currently started. See <code>[EXPOSURE_MODE](#camera_Settings.ExposureMode)</code> for details about the possible values for exposureMode.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setExposureMode(CameraPreview.EXPOSURE_MODE.CONTINUOUS);\r\n```\r\n### getExposureCompensationRange(cb, [errorCallback])\r\n\r\n<info>Get the minimum and maximum exposure compensation for the camera device currently started. Returns an object containing min and max integers.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getExposureCompensationRange(function(expoxureRange){\r\n  console.log(\"min: \" + exposureRange.min);\r\n  console.log(\"max: \" + exposureRange.max);\r\n});\r\n```\r\n### getExposureCompensation(cb, [errorCallback])\r\n\r\n<info>Get the current exposure compensation for the camera device currently started. Returns an integer representing the current exposure compensation.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.getExposureCompensation(function(expoxureCompensation){\r\n  console.log(exposureCompensation);\r\n});\r\n```\r\n### setExposureCompensation(exposureCompensation, [successCallback, errorCallback])\r\n\r\n<info>Set the exposure compensation for the camera device currently started. exposureCompensation accepts an integer. if exposureCompensation is lesser than the minimum exposure compensation, it is set to the minimum. if exposureCompensation is greater than the maximum exposure compensation, it is set to the maximum. (see getExposureCompensationRange() to get the minumum an maximum exposure compensation).</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setExposureCompensation(-2);\r\nCameraPreview.setExposureCompensation(3);\r\n```\r\n\r\n### setPreviewSize([dimensions, successCallback, errorCallback])\r\n\r\n<info>Change the size of the preview window.</info><br/>\r\n\r\n```javascript\r\nCameraPreview.setPreviewSize({width: window.screen.width, height: window.screen.height});\r\n```\r\n\r\n### getSupportedPictureSizes(cb, [errorCallback])\r\n\r\n```javascript\r\nCameraPreview.getSupportedPictureSizes(function(dimensions){\r\n  // note that the portrait version, width and height swapped, of these dimensions are also supported\r\n  dimensions.forEach(function(dimension) {\r\n    console.log(dimension.width + 'x' + dimension.height);\r\n  });\r\n});\r\n```\r\n\r\n### tapToFocus(xPoint, yPoint, [successCallback, errorCallback])\r\n\r\n<info>Set specific focus point. Note, this assumes the camera is full-screen.</info><br/>\r\n\r\n```javascript\r\nlet xPoint = event.x;\r\nlet yPoint = event.y\r\nCameraPreview.tapToFocus(xPoint, yPoint);\r\n```\r\n\r\n### onBackButton(successCallback, [errorCallback])\r\n\r\n<info>Callback event for the back button tap</info><br/>\r\n\r\n```javascript\r\nCameraPreview.onBackButton(function() {\r\n  console.log('Back button pushed');\r\n});\r\n```\r\n\r\n# Settings\r\n\r\n<a name=\"camera_Settings.FocusMode\"></a>\r\n\r\n### FOCUS_MODE\r\n\r\n<info>Focus mode settings:</info><br/>\r\n\r\n| Name | Type | Default | Note |\r\n| --- | --- | --- | --- |\r\n| FIXED | string | fixed |  |\r\n| AUTO | string | auto |  |\r\n| CONTINUOUS | string | continuous | IOS Only |\r\n| CONTINUOUS_PICTURE | string | continuous-picture | Android Only |\r\n| CONTINUOUS_VIDEO | string | continuous-video | Android Only |\r\n| EDOF | string | edof | Android Only |\r\n| INFINITY | string | infinity | Android Only |\r\n| MACRO | string | macro | Android Only |\r\n\r\n<a name=\"camera_Settings.FlashMode\"></a>\r\n\r\n### FLASH_MODE\r\n\r\n<info>Flash mode settings:</info><br/>\r\n\r\n| Name | Type | Default | Note |\r\n| --- | --- | --- | --- |\r\n| OFF | string | off |  |\r\n| ON | string | on |  |\r\n| AUTO | string | auto |  |\r\n| RED_EYE | string | red-eye | Android Only |\r\n| TORCH | string | torch |  |\r\n\r\n<a name=\"camera_Settings.CameraDirection\"></a>\r\n\r\n### CAMERA_DIRECTION\r\n\r\n<info>Camera direction settings:</info><br/>\r\n\r\n| Name | Type | Default |\r\n| --- | --- | --- |\r\n| BACK | string | back |\r\n| FRONT | string | front |\r\n\r\n<a name=\"camera_Settings.ColorEffect\"></a>\r\n\r\n### COLOR_EFFECT\r\n\r\n<info>Color effect settings:</info><br/>\r\n\r\n| Name | Type | Default | Note |\r\n| --- | --- | --- | --- |\r\n| AQUA | string | aqua | Android Only |\r\n| BLACKBOARD | string | blackboard | Android Only |\r\n| MONO | string | mono | |\r\n| NEGATIVE | string | negative | |\r\n| NONE | string | none | |\r\n| POSTERIZE | string | posterize | |\r\n| SEPIA | string | sepia | |\r\n| SOLARIZE | string | solarize | Android Only |\r\n| WHITEBOARD | string | whiteboard | Android Only |\r\n\r\n<a name=\"camera_Settings.ExposureMode\"></a>\r\n\r\n### EXPOSURE_MODE\r\n\r\n<info>Exposure mode settings:</info><br/>\r\n\r\n| Name | Type | Default | Note |\r\n| --- | --- | --- | --- |\r\n| AUTO | string | auto | IOS Only |\r\n| CONTINUOUS | string | continuous | |\r\n| CUSTOM | string | custom | |\r\n| LOCK | string | lock | IOS Only |\r\n\r\nNote: Use AUTO to allow the device automatically adjusts the exposure once and then changes the exposure mode to LOCK.\r\n\r\n<a name=\"camera_Settings.WhiteBalanceMode\"></a>\r\n\r\n### WHITE_BALANCE_MODE\r\n\r\n<info>White balance mode settings:</info><br/>\r\n\r\n| Name | Type | Default | Note |\r\n| --- | --- | --- | --- |\r\n| LOCK | string | lock | |\r\n| AUTO | string | auto | |\r\n| CONTINUOUS | string | continuous | IOS Only |\r\n| INCANDESCENT | string | incandescent | |\r\n| CLOUDY_DAYLIGHT | string | cloudy-daylight | |\r\n| DAYLIGHT | string | daylight | |\r\n| FLUORESCENT | string | fluorescent | |\r\n| SHADE | string | shade | |\r\n| TWILIGHT | string | twilight | |\r\n| WARM_FLUORESCENT | string | warm-fluorescent | |\r\n\r\n# IOS Quirks\r\nIt is not possible to use your computers webcam during testing in the simulator, you must device test.\r\n\r\n# Sample App\r\n\r\n<a href=\"https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview-sample-app\">cordova-plugin-camera-preview-sample-app</a> for a complete working Cordova example for Android and iOS platforms.\r\n\r\n# Screenshots\r\n\r\n<img src=\"https://raw.githubusercontent.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview/master/img/android-1.png\"/> <img hspace=\"20\" src=\"https://raw.githubusercontent.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview/master/img/android-2.png\"/>\r\n\r\n# Credits\r\n\r\nMaintained by Weston Ganger - [@westonganger](https://github.com/westonganger)\r\n\r\nCreated by Marcel Barbosa Pinto [@mbppower](https://github.com/mbppower)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cordova-plugin-camera-preview/cordova-plugin-camera-preview.git"
  },
  "typings": "typescript/CameraPreview.d.ts",
  "version": "0.9.0"
}
